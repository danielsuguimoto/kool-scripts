scripts:
  # Git commands
  git: kool docker -v $PWD:/git:delegated -v $HOME/.ssh:/root/.ssh:delegated alpine/git
  gitconfig:
    - kool run git config user.email "danielsuguimoto@gmail.com"
    - kool run git config user.name "Daniel Jun Suguimoto"
  gnb: kool run git checkout -b
  gp: kool run git push -u origin
  gc: kool run git commit -am
  gs: kool run git status
  ga: kool run git add .
  gub:
    - kool run git checkout $BRANCH
    - kool run git reset --hard origin/$BRANCH
    - kool run git pull upstream $BRANCH
    - kool run git push origin $BRANCH

  # Docker commands
  prune: docker system prune -af --volumes
  update:
    - kool stop
    - docker-compose pull
    - kool start

  # Kool commands
  kdev:
    - rm -f kool
    - kool docker --env='GOOS=$GOOS' --volume=go_path:/go:delegated golang:1.15.0 go build -o kool
    - mv kool /usr/local/bin/kools

  kdocs:
    - rm -f docs/4-Commands/*.md
    - kool docker --volume=go_path:/go:delegated golang:1.15.0 go run docs.go

  # Golang commands
  golint: kool docker --volume=go_path:/go:delegated golangci/golangci-lint:v1.31.0 golangci-lint run -v
  gofmt: kool docker --volume=go_path:/go:delegated golang:1.15.0 go fmt ./...
  gotest: kool docker --volume=go_path:/go:delegated golang:1.15.0 go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
  goqa:
    - kool run gofmt
    - kool run golint
    - kool run gotest

  krelease:
    - export BRANCH=master
    - kool run gub
    - kool run make-docs
    - kool run parse-presets
    - kool run fmt
    - kool run test

  # Golang Cobra commands
  cobra: kool docker danielsuguimoto/go-cobra
  cadd: kool run cobra add

  #fwd
  fstart: fwd start
  fdown: fwd down
  fyarn: fwd yarn
  fart: fwd artisan